/*! `antlers` grammar compiled for Highlight.js 11.8.0 */
var hljsGrammar=(()=>{"use strict";return e=>{
const n=e.regex,a=["asset","assets","cache","collection","can","cookie","dd","ddd","dump","get_content","get_error","get_errors","get_files","glide","in","increment","installed","is","iterate","foreach","locales","markdown","member","mix","mount_url","nav","not_found","404","obfuscate","parent","partial","path","query","range","loop","redirect","relate","rotate","switch","route","scope","section","session","set","structure","svg","theme","trans","trans_choice","user_groups","user_roles","users","vite","widont","yields"],t={
begin:"\\|\\s*",end:"(\\s|\\(|:)",excludeEnd:!0,returnBegin:!1,relevance:0,
contains:[{scope:"title",match:/[a-zA-Z_][a-zA-Z0-9_-]*/}]},s={scope:"variable",
relevance:0,match:"\\$?[_a-zA-Z][_a-zA-Z0-9-]*"},r={scope:"number",relevance:0,
match:/\d+/
},c=a.concat(a.map((e=>"%"+e))),i=["if","elseif","else","endif","unless"].concat(c),l={
scope:"substr",variants:[{beginScope:"template-tag",endScope:"template-tag",
begin:/\{/,end:/\}/,contains:[((e,{relevance:a})=>({beginScope:{1:"name"},
relevance:a||0,endScope:"template-tag",begin:[n.either(...e),"(?=\\s|:)"],
end:"\\s*",keywords:"in",contains:[s,r,t]}))(c,0),s,r,t,"self"]}]},o={
scope:"string",relevance:0,variants:[{begin:/'/,end:/'/},{begin:/"/,end:/"/}],
contains:[l]},g=(e,{relevance:n})=>({beginScope:{1:"template-tag",2:"name"},
relevance:n||0,endScope:"template-tag",
begin:["\\{\\{\\s*/?",e.join("|"),"(?=\\s|:)"],end:"\\s*\\}\\}",keywords:"in",
contains:[o,s,r,l,t,"self"]}),p=g(i,{relevance:5}),d=((e,{relevance:n})=>({
beginScope:{1:"template-tag",3:"variable"},relevance:n||0,
endScope:"template-tag",begin:["\\{\\{\\s*/?"],end:"\\s*\\}\\}",keywords:"in",
contains:[o,s,r,l,t]}))(0,{relevance:5});return g([/[a-z_]+/],{relevance:1}),{
name:"Antlers",keywords:"statamic antlers",case_insensitive:!1,
subLanguage:"xml",contains:[e.COMMENT("\\{\\{#","#\\}\\}"),{
begin:"^\\-{3}(?=\\s|$)",end:"^\\-{3}(?=\\s|$)",subLanguage:"yaml",relevance:10
},{begin:/<\?(php)?/,end:/\?>/,subLanguage:"php",relevance:0},p,d,{
beginScope:"template-tag",endScope:"template-tag",begin:"\\{\\{\\$",
end:"\\$\\}\\}",subLanguage:"php",relevance:1},{beginScope:"template-tag",
endScope:"template-tag",begin:"\\{\\{\\?",end:"\\?\\}\\}",subLanguage:"php",
relevance:1},{begin:"{\\{",end:"\\}",contains:["self",p]}]}}})()
;export default hljsGrammar;